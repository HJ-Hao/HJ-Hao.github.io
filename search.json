[{"title":"hexo+github搭建个人博客","url":"/2019/11/21/hexo-github搭建个人博客/","content":"## 1. 前言\n使用github pages服务搭建博客的好处有：\n<ol>\n    <li>全是静态文件，访问速度快；</li>\n    <li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li>\n    <li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li>\n    <li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li>\n    <li>博客内容可以轻松打包、转移、发布到其它平台；</li>\n    <li>等等；</li>\n</ol>\n\n### 1.1. 一些准备工作\n<ol>\n    <li>拥有一个GitHub账号， 没有可以去{% link github https://github.com/ %}的官网注册一个</li>\n    <li>安装了node和npm并有一定的了解</li>\n    <li>安装了git</li>\n</ol>\n本文的环境是:\n\n    window\n\n    git@2.24\n\n    node@10.15.3\n\n    hexo@4.0.0\n\n## 2. 搭建github博客\n\n### 2.1. 先在账户上创建一个仓库\n注册好github账号后， 在添加符号处选择 new repository 添加一个仓库。需要注意的是，在创建时仓库的名字要设为 ```你的用户名.github.io```。比如说你的github用户名是hi，那么你的仓库名字就应该为hi.github.io。（必须使用自己的用户名，否则会无效）。搭建好博客后，你就可以通过 http://hi.github.io 去访问了。\n由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。\n需要注意的是:\n\n    1、注册的邮箱一定要验证，否则不会成功；\n\n    2、仓库名字必须是：username.github.io，其中username是你的用户名；\n\n    3、仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；\n\n### 2.2. 绑定域名\n当然，你不绑定域名肯定也是可以的，就用默认的 xxx.github.io 来访问，如果你想更个性一点，想拥有一个属于自己的域名，那也是OK的。这里作者没有绑定域名， 因此就不过多介绍了， 想绑定域名的小伙伴可以去 http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa#bang-ding-yu-ming 参考学习。\n\n## 3. 配置SSH key\n为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。\n我们打开git bash\n``` bash\n$ cd ~/.ssh\n```\n上面的命令是为了检查是否已经存在SSH, 如果提示: No such file or directory 说明你是第一次使用git。\n``` bash\nssh-keygen -t rsa -C \"邮件地址\"\n```\n然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -> SSH and GPG keys -> New SSH key：\n\n<img src=\"../../../../img/blog1-1.png\">\n\n将刚复制的内容粘贴到key那里，title随便填，保存。\n\n### 3.1. 测试是否成功\n```\n$ ssh -T git@github.com # 注意邮箱地址不用改\n```\n如果提示<span style=\"color: #f00\">Are you sure you want to continue connecting (yes/no)?</span>，输入yes，然后会看到：\n```\nHi HJ-Hao! You’ve successfully authenticated, but GitHub does not provide shell access.\n```\n看到这个信息说明SSH已配置成功！\n\n这时你还需要配置你的用户信息:\n```\n$ git config --global user.name \"John Doe\" #填写你的github用户名\n$ git config --global user.email johndoe@example.com  #填写你的github注册邮箱\n```\n接下来我们开始搭建\n\n## 4. 使用hexo写博客\n\n### 4.1. 关于hexo\n\nHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。(这段取自hexo官网)\n官网: <a href=\"http://hexo.io\" target=\"_blank\">http://hexo.io</a>\ngithub: <a href=\"https://github.com/hexojs/hexo\" target=\"_blank\">https://github.com/hexojs/hexo</a>\n\n### 4.2. hexo的原理\n\n由于github pages存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。\n\n### 4.3. 一些安装时的注意事项\n\n\n    1、很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，\n    建议全部使用git bash来执行；\n    2、hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；\n    3、hexo有2种_config.yml文件，一个是根目录下的全局的_config.yml，一个是各个theme下的；\n\n### 4.4. 安装\n```\n$npm install -g hexo\n```\n\n### 4.5. 初始化\n新建一个文件夹（名字可以随便取），比如我是在用户目录下创建的，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。\n```\n$ mkdir blog    #创建一个blog文件\n$ cd blog    #打开这个blog文件\n$ hexo init\n```\nhexo会自动下载一些文件到这个目录，包括node_modules。\n```\n$ hexo g # 生成\n$ hexo s # 启动服务\n```\n执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些文件将来都是要提交到github去的。\n<img src=\"../../../../img/blog1-2.png\">\nhexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容。如果该端口被占用了可以通过下面命令改变端口:\n```\n$ hexo s -p <这里写端口>\n```\n第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章。\n\n### 4.6. 修改主题\n\n如果你觉得默认的主题不好看， 那我们先来修改主题。 这是 <a href=\"https://hexo.io/themes/\" target=\"_blank\">官方主题</a>。我这个博客的主题是: <a href=\"https://github.com/aircloud/hexo-theme-aircloud\" target=\"_blank\">AirCloud</a>\n大家也可以选择自己喜欢的主题。 选择好后，我们将它们下载下来\n```\n$ git clone git@github.com:aircloud/hexo-theme-aircloud.git\n```\n下载好后将这个文件放入你创建的博客文件夹下的theme文件中\n\n<img src=\"../../../../img/blog1-3.png\">\n\n修改_config.yml中的theme: landscape改为theme: aircloud（注意这里主题的名字要和主题文件的文件名一致），然后重新执行hexo g来重新生成。\n\n如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。\n\n### 4.7. 上传之前\n\n在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。\n\n### 4.8. 上传到github\n\n如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。\n\n首先，ssh key肯定要配置好。\n\n其次，配置_config.yml中有关deploy的部分：\n\n```\ndeploy:\n  type: git\n  repository: git@github.com:HJ-Hao/HJ-Hao.github.io.git\n  branch: master\n```\n\n此时直接执行hexo d的话一般会报如下错误：\n```\nDeployer not found: github 或者 Deployer not found: git\n```\n这时我们需要安装一个插件\n```\nnpm install hexo-deployer-git --save\n```\n其它命令不确定，部署这个命令一定要用git bash，否则会提示<span style=\"color: #f00\">Permission denied (publickey)</span>。\n\n打开你的git bash，输入hexo d就会将本次有改动的代码全部提交，没有改动的不会。\n\n### 4.9. 常用hexo命令\n一些常用的命令\n```\nhexo new \"postName\"  #新建一篇文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n```\n下面是一些命令的简写\n\n```\nhexo s == hexo server\nhexo d == hexo deploy\nhexo g == hexo generate\nhexo n == hexo new\n```\n\n当然命令也可以增加一些参数, 比如:\n\n```\nhexo s -g #生成并本地预览\nhexo d -g #生成并上传\n```\n更多的命令请浏览<a href=\"https://hexo.io/zh-cn/docs/commands\" target=\"_blank\">官方文档</a>\n\n### 4.11. _config.yml\n这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。\n\n需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。\n\n### 4.12. 写博客\n定位到我们的hexo根目录，执行命令：\n```\nhexo new \"my-first-blog\"\n```\n<img src=\"../../../../img/blog1-4.png\">\n\nhexo会帮我们在_posts下生成相关md文件， 我们打开后就可以直接编写了。当然我们也可以选择直接创建，不过使用命令可以帮我们默认生成一些信息\n\n<img src=\"../../../../img/blog1-5.png\">\n\n这个用---分隔的区域官方称为Front-matter， 它用于指定个别文件的变量。一些常见的参数有：\n\n    1、title 文章的标题\n    2、date\t建立日期\n    3、update 文章更新的时间\n    4、tags\t文章的标签（不适用于分页）\n    5、categories\t文章的分类（不适用于分页）\n\n然后我们就可以直接在这个md文件下编写我们的博客了。\n\n## 5. 一些参考\n\nhttp://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa#can-kao\n\nhttp://www.cnblogs.com/zhcncn/p/4097881.html\n\nhttp://www.jianshu.com/p/05289a4bc8b2\n","tags":["hexo github"]},{"title":"Hello World","url":"/2019/11/19/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]